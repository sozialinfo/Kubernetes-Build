apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-odoo
  labels:
    app: odoo
spec:
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
      {{- end }}
      initContainers:
        - name: init
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
              {{- if .Values.downloadOdooEnterprise }}/entrypoint.sh download-git-archive && \{{- end }}
              /entrypoint.sh git-clone-addons && \
              /entrypoint.sh init-db
          envFrom:
            - secretRef:
                name: {{ .Values.githubAddonsCredentialsSecretName }}
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          env:
            {{- if .Values.postgresql.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingSecret }}
                  key: {{ .Values.postgresql.auth.secretKeys.userPasswordKey }}
            - name: PGHOST
              value: odoo-postgresql.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: {{ .Values.postgresql.auth.username }}
            {{- end }}
            {{- if .Values.postgres.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretRef }}
                  key: {{ .Values.postgres.userPasswordKey }}
            - name: PGHOST
              value: postgres.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: {{ .Values.postgres.user }}
            {{- end }}
            {{- if .Values.vshnPostgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PASSWORD
            - name: PGSSLMODE
              value: verify-ca
            - name: PGSSLROOTCERT
              value: "/mnt/{{ .Values.vshnPostgres.secretRef }}/ca.crt"
            {{- end }}
            {{- if .Values.cnpg.enabled }}
            - name: PGHOST
              value: {{ .Release.Name }}-odoo-db-rw.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: {{ .Values.cnpg.cluster.bootstrap.initdb.user }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-odoo-db-app
                  key: password
            {{- end }}
          {{- if .Values.vshnPostgres.enabled }}
          volumeMounts:
          - name: {{ .Values.vshnPostgres.secretRef }}
            readOnly: true
            mountPath: "/mnt/{{ .Values.vshnPostgres.secretRef }}"
          {{- end }}
      containers:
        - name: odoo
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
          - containerPort: 8069
          envFrom:
            - secretRef:
                name: {{ .Values.githubAddonsCredentialsSecretName }}
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          env:
            {{- if .Values.postgresql.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: password
            - name: PGHOST
              value: odoo-postgresql.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: {{ .Values.postgresql.auth.username }}
            {{- end }}
            {{- if .Values.postgres.enabled }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-odoo-db-app
                  key: password
            - name: PGHOST
              value: postgres.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: {{ .Values.postgres.user }}
            {{- end }}
            {{- if .Values.vshnPostgres.enabled }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_HOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vshnPostgres.secretRef }}
                  key: POSTGRESQL_PASSWORD
            - name: PGSSLMODE
              value: verify-ca
            - name: PGSSLROOTCERT
              value: "/mnt/{{ .Values.vshnPostgres.secretRef }}/ca.crt"
            {{- end }}
            {{- if .Values.cnpg.enabled }}
            - name: PGHOST
              value: {{ .Release.Name }}-odoo-db-rw.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: {{ .Values.cnpg.cluster.bootstrap.initdb.user }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-odoo-db-app
                  key: password
            {{- end }}
            {{- if .Values.externalServices.meilisearch.enabled }}
            - name: PUBLIC_MEILISEARCH_HOST
              value: "http://{{ tpl .Values.externalServices.meilisearch.serviceName . }}:{{ .Values.externalServices.meilisearch.port }}"
            {{- end }}
            {{- if .Values.extraEnv }}
            {{- .Values.extraEnv | nindent 12 }}
            {{- end }}
          {{- if .Values.vshnPostgres.enabled }}
          volumeMounts:
          - name: {{ .Values.vshnPostgres.secretRef }}
            readOnly: true
            mountPath: "/mnt/{{ .Values.vshnPostgres.secretRef }}"
          {{- end }}
      {{- if .Values.vshnPostgres.enabled }}
      volumes:
      - name: {{ .Values.vshnPostgres.secretRef }}
        secret:
          secretName: {{ .Values.vshnPostgres.secretRef }}
      {{- end }}
