{{- if .Values.ingress.enabled }}
{{- if eq .Values.ingress.className "nginx" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-headers
  namespace: ingress-nginx
data:
  X-Forwarded-Host: "$host"
  X-Forwarded-For: "$proxy_add_x_forwarded_for"
  X-Forwarded-Proto: "$scheme"
  X-Real-IP: "$remote_addr"
  Upgrade: "$http_upgrade"
  Connection: "$connection_upgrade"
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: odoo-ingress
  annotations:
    {{- if .Values.ingress.clusterIssuerRef }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.clusterIssuerRef }}
    {{- end }}
    {{- if eq .Values.ingress.className "nginx" }}
    nginx.ingress.kubernetes.io/proxy-set-headers: "custom-headers"
    nginx.ingress.kubernetes.io/rewrite-target: /
    {{- end }}
spec:
  ingressClassName: {{.Values.ingress.className }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /websocket
        pathType: Prefix
        backend:
          service:
            name: odoo-gevent
            port:
              number: 8072
      - path: /
        pathType: Prefix
        backend:
          service:
            name: odoo
            port:
              number: 8069
  {{- if .Values.ingress.customDomain }}
  - host: {{.Values.ingress.customDomain }}
    http:
      paths:
      - path: /websocket
        pathType: Prefix
        backend:
          service:
            name: odoo-gevent
            port:
              number: 8072
      - path: /
        pathType: Prefix
        backend:
          service:
            name: odoo
            port:
              number: 8069
  {{- end }}
  {{- if .Values.ingress.clusterIssuerRef }}
  tls:
    - hosts:
      - {{.Values.ingress.host }}
      {{- if .Values.ingress.customDomain }}
      - {{ .Values.ingress.customDomain }}
      {{- end }}
      secretName: odoo-ingress-cert
  {{- end }}
{{- end }}
